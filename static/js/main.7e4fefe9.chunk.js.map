{"version":3,"sources":["hooks/useKeyPress.js","utilities/colors.js","data/lyrics.js","App.js","utilities/arrays.js","serviceWorker.js","index.js"],"names":["useKeyPress","callback","targetKey","downHandler","key","useEffect","window","addEventListener","removeEventListener","randomColor","redComponent","random","greenComponent","blueComponent","lyrics","line","song","styles","container","height","display","flexDirection","justifyContent","alignItems","backgroundColor","margin","textAlign","fontFamily","color","fontSize","App","arrayLength","useState","length","lyricIndex","setLyricIndex","incrementLyricIndex","intervalId","setInterval","clearInterval","lyricSafeIndex","Math","abs","lyric","delimitedLine","replace","style","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yLAmBeA,EAjBK,SAACC,EAAUC,GAC7B,IAAMC,EAAc,SAAC,GAAY,EAAVC,MACTF,GACVD,KAIJI,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,MAGvC,K,gBCdQM,EAAc,WACzB,IAAMC,EAAeC,IAAO,EAAG,KACzBC,EAAiBD,IAAO,EAAG,KAC3BE,EAAgBF,IAAO,EAAG,KAEhC,MAAM,OAAN,OAAcD,EAAd,YAA8BE,EAA9B,YAAgDC,EAAhD,MCgMaC,EAvMA,CACb,CACEC,KAAM,iCACNC,KAAM,UAER,CACED,KAAM,sBACNC,KAAM,gBAER,CACED,KAAM,qCACNC,KAAM,UAER,CACED,KAAM,sCACNC,KAAM,SAER,CACED,KAAM,+BACNC,KAAM,cAER,CACED,KAAM,yBACNC,KAAM,gBAER,CACED,KAAM,6CACNC,KAAM,SAER,CACED,KAAM,yDACNC,KAAM,OAER,CACED,KAAM,8BACNC,KAAM,WAER,CACED,KAAM,gCACNC,KAAM,yBAER,CACED,KAAM,qCACNC,KAAM,cAER,CACED,KAAM,QACNC,KAAM,OAER,CACED,KAAM,kCACNC,KAAM,UAER,CACED,KAAM,gDACNC,KAAM,qBAER,CACED,KAAM,yCACNC,KAAM,YAER,CACED,KAAM,yCACNC,KAAM,mBAER,CACED,KAAM,6BACNC,KAAM,cAER,CACED,KAAM,wBACNC,KAAM,kBAER,CACED,KAAM,uCACNC,KAAM,eAER,CACED,KAAM,sBACNC,KAAM,gBAER,CACED,KAAM,4BACNC,KAAM,QAER,CACED,KAAM,gCACNC,KAAM,YAER,CACED,KAAM,wBACNC,KAAM,gBAER,CACED,KAAM,4CACNC,KAAM,gBAER,CACED,KAAM,2BACNC,KAAM,iBAER,CACED,KAAM,0BACNC,KAAM,aAER,CACED,KAAM,kCACNC,KAAM,YAER,CACED,KAAM,sBACNC,KAAM,eAER,CACED,KAAM,kCACNC,KAAM,kBAER,CACED,KAAM,+BACNC,KAAM,gBAER,CACED,KAAM,2CACNC,KAAM,mBAER,CACED,KAAM,yCACNC,KAAM,cAER,CACED,KAAM,0CACNC,KAAM,cAER,CACED,KAAM,mCACNC,KAAM,YAER,CACED,KAAM,6BACNC,KAAM,QAER,CACED,KAAM,kDACNC,KAAM,gBAER,CACED,KAAM,mCACNC,KAAM,cAER,CACED,KAAM,6BACNC,KAAM,gBAER,CACED,KAAM,iCACNC,KAAM,WAER,CACED,KAAM,wBACNC,KAAM,SAER,CACED,KAAM,oBACNC,KAAM,wBAER,CACED,KAAM,2BACNC,KAAM,UAER,CACED,KAAM,sCACNC,KAAM,WAER,CACED,KAAM,8BACNC,KAAM,eAER,CACED,KAAM,6BACNC,KAAM,YAER,CACED,KAAM,4BACNC,KAAM,mBAER,CACED,KAAM,iCACNC,KAAM,cAER,CACED,KAAM,oCACNC,KAAM,uBAER,CACED,KAAM,kCACNC,KAAM,cCzJV,IAAMC,EAAS,CACbC,UAAW,CACTC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,OAEnBT,KAAM,CACJU,OAAQ,GACRC,UAAW,SACXC,WAAY,SACZC,MAAO,QACPC,SAAU,IAEZb,KAAM,CACJU,UAAW,SACXC,WAAY,YACZC,MAAO,QACPC,SAAU,KAICC,EA7Df,WAAgB,ICHWC,EDGZ,EACuBC,oBCJXD,EDIgCjB,EAAOmB,OCHzDtB,IAAO,EAAGoB,EAAc,KDElB,mBACNG,EADM,KACMC,EADN,KAGPC,EAAsB,WAC1BD,GAAc,SAAAD,GAAU,OAAIA,EAAa,MAO3C7B,qBAAU,WACR,IACMgC,EAAaC,YAAYF,EADD,KAG9B,OAAO,WACLG,cAAcF,MAEf,IAEHrC,EAAYoC,EAAqB,cACjCpC,GAd4B,WAC1BmC,GAAc,SAAAD,GAAU,OAAIA,EAAa,OAaV,aAEjC,IAAMM,EAAiBC,KAAKC,IAAIR,GAAcpB,EAAOmB,OAC/CU,EAAQ7B,EAAO0B,GAEbzB,EAAe4B,EAAf5B,KAAMC,EAAS2B,EAAT3B,KACR4B,EAAgB7B,EAAK8B,QAAQ,KAAM,OAEzC,OACE,yBAAKC,MAAK,eAAO7B,EAAOC,UAAd,CAAyBM,gBAAiBf,OAClD,wBAAIqC,MAAO7B,EAAOF,MAAlB,SAA0B6B,EAA1B,UACA,wBAAIE,MAAO7B,EAAOD,MAAOA,KEzBX+B,QACW,cAA7BzC,OAAO0C,SAASC,UAEe,UAA7B3C,OAAO0C,SAASC,UAEhB3C,OAAO0C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.7e4fefe9.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\nconst useKeyPress = (callback, targetKey) => {\n  const downHandler = ({ key }) => {\n    if (key === targetKey) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n    };\n    // eslint-disable-next-line\n  }, []);\n};\n\nexport default useKeyPress;\n","import { random } from './math';\n\nexport const randomColor = () => {\n  const redComponent = random(0, 255);\n  const greenComponent = random(0, 255);\n  const blueComponent = random(0, 255);\n\n  return `rgb(${redComponent},${greenComponent},${blueComponent})`;\n};\n","const lyrics = [\n  {\n    line: 'Every night fucks every day up',\n    song: 'Nights',\n  },\n  {\n    line: 'Keep a place for me',\n    song: 'Self Control',\n  },\n  {\n    line: 'God gave you what you could handle',\n    song: 'Biking',\n  },\n  {\n    line: 'What if we decide to live by choice',\n    song: 'Higgs',\n  },\n  {\n    line: 'Moon river wider than a mile',\n    song: 'Moon river',\n  },\n  {\n    line: 'Running on my mind boy',\n    song: 'Forrest gump',\n  },\n  {\n    line: \"I'm not him but I'll mean something to you\",\n    song: 'Nikes',\n  },\n  {\n    line: 'I thought that I was dreamin when you said you love me',\n    song: 'Ivy',\n  },\n  {\n    line: 'This is a cult not a clique',\n    song: 'Channel',\n  },\n  {\n    line: \"who don't believe in anything\",\n    song: 'No church in the wild',\n  },\n  {\n    line: \"No sleeper seats that's a mattress\",\n    song: 'In my room',\n  },\n  {\n    line: 'Beans',\n    song: 'DHL',\n  },\n  {\n    line: 'I love the way you make me feel',\n    song: 'Rushes',\n  },\n  {\n    line: 'A tornado flew around my room before you came',\n    song: \"Thinkin' bout you\",\n  },\n  {\n    line: 'Fuck me good fuck me long fuck me numb',\n    song: 'Novacane',\n  },\n  {\n    line: \"Now I'm in the lab always working late\",\n    song: 'Songs for women',\n  },\n  {\n    line: 'This is joy this is summer',\n    song: 'Skyline to',\n  },\n  {\n    line: 'Accept me on Facebook',\n    song: 'Facebook story',\n  },\n  {\n    line: 'Sluggish lazy stupid and unconcerned',\n    song: 'Be yourself',\n  },\n  {\n    line: 'Bending up my Nikes',\n    song: 'Pink + White',\n  },\n  {\n    line: 'Smoking good rolling solo',\n    song: 'Solo',\n  },\n  {\n    line: 'You text nothin like you look',\n    song: 'Good Guy',\n  },\n  {\n    line: \"You can't hurt me now\",\n    song: 'Pretty Sweet',\n  },\n  {\n    line: 'Just like me they long to be close to you',\n    song: 'Close to you',\n  },\n  {\n    line: 'White Ferrari good times',\n    song: 'White Ferrari',\n  },\n  {\n    line: \"I'd rather live outside\",\n    song: 'Seigfried',\n  },\n  {\n    line: 'I will always love you how I do',\n    song: 'Godspeed',\n  },\n  {\n    line: \"I'm on Mama I'm on.\",\n    song: 'Futura Free',\n  },\n  {\n    line: 'Was I working just way too hard',\n    song: 'Solo (Reprise)',\n  },\n  {\n    line: \"Spendin' too much time alone\",\n    song: 'Sierra Leone',\n  },\n  {\n    line: \"Real love  I'm searching for a real love\",\n    song: 'Super Rich Kids',\n  },\n  {\n    line: 'I saw the sky like I never seen before',\n    song: 'Pilot Jone',\n  },\n  {\n    line: 'You hit them stones and broke your home',\n    song: 'Crack Rock',\n  },\n  {\n    line: 'Working at  the pyramids tonight',\n    song: 'Pyramids',\n  },\n  {\n    line: 'Lost in the heat of it all',\n    song: 'Lost',\n  },\n  {\n    line: \"If it brings me to my knees it's a bad religion\",\n    song: 'Bad Religion',\n  },\n  {\n    line: 'Cotton candy Majin Buu oh oh ohh',\n    song: 'Pink Matte',\n  },\n  {\n    line: 'Try to find a place for me',\n    song: 'At your best',\n  },\n  {\n    line: 'Yup duplex in New Orleans east',\n    song: 'Alabama',\n  },\n  {\n    line: 'Is you Roger or Novak',\n    song: 'Unity',\n  },\n  {\n    line: 'Comme des Garcons',\n    song: 'Comme des Garçons',\n  },\n  {\n    line: 'It takes a mind to worry',\n    song: 'Wither',\n  },\n  {\n    line: 'Cityview turned to the mountainview',\n    song: 'Hublots',\n  },\n  {\n    line: \"Akhi tell 'em i ain't goin'\",\n    song: 'Slide On Me',\n  },\n  {\n    line: \"When I'm up they gon' hate\",\n    song: 'Sideways',\n  },\n  {\n    line: 'Hit the road and get rich',\n    song: 'Mitsubushi Sony',\n  },\n  {\n    line: \"I don't believe in time travel\",\n    song: 'We All Try',\n  },\n  {\n    line: \"There will be tears I've no doubt\",\n    song: 'There Will Be Tears',\n  },\n  {\n    line: \"I'm about to drive in the ocean\",\n    song: 'Swim Good',\n  },\n];\n\nexport default lyrics;\n","import React, { useState, useEffect } from 'react';\nimport { useKeyPress } from './hooks';\nimport { randomIndex, randomColor } from './utilities';\nimport { lyrics } from './data';\n\nfunction App() {\n  const [lyricIndex, setLyricIndex] = useState(randomIndex(lyrics.length));\n\n  const incrementLyricIndex = () => {\n    setLyricIndex(lyricIndex => lyricIndex + 1);\n  };\n\n  const decrementLyricIndex = () => {\n    setLyricIndex(lyricIndex => lyricIndex - 1);\n  };\n\n  useEffect(() => {\n    const TEN_SECONDS_IN_MILLIS = 1000 * 10;\n    const intervalId = setInterval(incrementLyricIndex, TEN_SECONDS_IN_MILLIS);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  useKeyPress(incrementLyricIndex, 'ArrowRight');\n  useKeyPress(decrementLyricIndex, 'ArrowLeft');\n\n  const lyricSafeIndex = Math.abs(lyricIndex) % lyrics.length;\n  const lyric = lyrics[lyricSafeIndex];\n\n  const { line, song } = lyric;\n  const delimitedLine = line.replace(/ /g, ' / ');\n\n  return (\n    <div style={{ ...styles.container, backgroundColor: randomColor() }}>\n      <h1 style={styles.line}>“{delimitedLine}”</h1>\n      <h2 style={styles.song}>{song}</h2>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'red',\n  },\n  line: {\n    margin: 96,\n    textAlign: 'center',\n    fontFamily: 'blonde',\n    color: 'white',\n    fontSize: 50,\n  },\n  song: {\n    textAlign: 'center',\n    fontFamily: 'monospace',\n    color: 'white',\n    fontSize: 35,\n  },\n};\n\nexport default App;\n","import { random } from './math';\n\nexport const randomIndex = arrayLength => {\n  return random(0, arrayLength - 1);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}